name: Run AI SW examples as runner validation

on:
  workflow_dispatch:
  push:
    branches:
      - mnijjar/test-ci
  schedule:
    - cron: "0 */4 * * *"

jobs:
  get-latest-metal-prerelease:
    # to have access to gh cli
    runs-on: tt-beta-ubuntu-2204-mnijjar
    timeout-minutes: 3
    outputs:
      latest-tag: ${{ steps.get-latest-tag.outputs.latest-tag }}
    steps:
      - name: Get latest metal tag
        id: get-latest-tag
        run: |
          latestTag=$(curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/tenstorrent/tt-metal/releases" | jq -r ".[0].name")
          echo "latest-tag=$latestTag" >> "$GITHUB_OUTPUT"
      - name: Show latest tag for logging and debug
        run: echo "::notice title=latest-metal-tag::Latest metal tag is ${{ steps.get-latest-tag.outputs.latest-tag }}"
  run-metal-model-n300:
    needs: get-latest-metal-prerelease
    runs-on: tt-beta-ubuntu-2204-n300-large-stable
    container:
      image: ghcr.io/tenstorrent/tt-metal/tt-metalium-ubuntu-22.04-amd64-release:${{ needs.get-latest-metal-prerelease.outputs.latest-tag }}
      volumes:
        - /dev/hugepages-1G:/dev/hugepages-1G
      options: "--device /dev/tenstorrent"
    strategy:
      matrix:
        # Run once now, but we may increase frequency to stress our infra more
        iter: [0]
    steps:
      - uses: actions/checkout@v4
        with:
          repository: tenstorrent/tt-metal
          submodules: recursive
          ref: ${{ needs.get-latest-metal-prerelease.outputs.latest-tag }}
      - name: Install dev deps
        run: pip install -r tt_metal/python_env/requirements-dev.txt
      - name: Run falcon7b model test
        env:
          ARCH_NAME: wormhole_b0
          WH_ARCH_YAML: wormhole_b0_80_arch_eth_dispatch.yaml
          PYTHONPATH: ${{ github.workspace }}
        run: pytest --disable-warnings -q -s --input-method=cli --cli-input="YOUR PROMPT GOES HERE!"  models/demos/wormhole/falcon7b/demo_wormhole.py::test_demo -k default_mode_1024_stochastic

  run-matmul-n300:
    needs: get-latest-metal-prerelease
    runs-on: tt-beta-ubuntu-2204-n300-large-stable
    container:
      image: ghcr.io/tenstorrent/tt-metal/tt-metalium-ubuntu-22.04-amd64-release:${{ needs.get-latest-metal-prerelease.outputs.latest-tag }}
      volumes:
        - /dev/hugepages-1G:/dev/hugepages-1G
      options: "--device /dev/tenstorrent"
    strategy:
      matrix:
        # Run once now, but we may increase frequency to stress our infra more
        iter: [0]
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Run matmul test
        env:
          ARCH_NAME: wormhole_b0
          WH_ARCH_YAML: wormhole_b0_80_arch_eth_dispatch.yaml
          PYTHONPATH: ${{ github.workspace }}
        run: python tools/run_op_on_device.py

  run-matmul-n150:
    needs: get-latest-metal-prerelease
    runs-on: tt-beta-ubuntu-2204-n150-large-stable
    container:
      image: ghcr.io/tenstorrent/tt-metal/tt-metalium-ubuntu-22.04-amd64-release:${{ needs.get-latest-metal-prerelease.outputs.latest-tag }}
      volumes:
        - /dev/hugepages-1G:/dev/hugepages-1G
      options: "--device /dev/tenstorrent"
    strategy:
      matrix:
        # Run once now, but we may increase frequency to stress our infra more
        iter: [0]
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Run matmul test
        env:
          ARCH_NAME: wormhole_b0
          WH_ARCH_YAML: wormhole_b0_80_arch_eth_dispatch.yaml
          PYTHONPATH: ${{ github.workspace }}
        run: python tools/run_op_on_device.py

